#변수 선언
file:
  directory: D:/SGSG/download/green_gram_jpa

global:
  oauth2:
    base-url: /oauth2/authorization #FE 소셜로그인 요청할 때 사용할 주소값
    # 플랫폼과 통신을 3번 정도 하는데 각 통신들이 하나의 작업을 위한 트랜잭션이라는 것을
    # 연결시키기 위해 쿠키를 사용한다.
    authorization-request-cookie-name: oauth2_auth_request
    redirect-uri-cookie-name: redirect_uri
    cookie-expiry-second: 180
    authorized-redirect-uris:
      - http://localhost:8080/fe/redirect
      - http://http://http://112.222.157.156:5222/fe/redirect

const:
  default-page-size: 20

#MyBatis 설정
mybatis:
  mapper-locations: mappers/**/*.xml
  configuration:
    map-underscore-to-camel-case: true

jwt:
  issuer: green@green.kr
  secret_key: studyspringbootsagongsugikoreaairforceunivercityyoungjinaaa

# 어플리케이션 설정
spring:
  application:
    name: GreenGramVer3

  #DB 연결 설정
  datasource:
    driver-class-name: net.sf.log4jdbc.sql.jdbcapi.DriverSpy
    url: jdbc:log4jdbc:mariadb://localhost/greengram_oauth2
    username: root
    password: green502
  jpa:
    database: mysql
    hibernate:
      #ddl-auto: update #entity가 없으면 create, 기존 존재하는 entity는 컬럼을 새롭게 추가하는 것만 반영
      ddl-auto: update # entity를 서버 기동할 때마다 drop 후 create 한다.
    properties:
      hibernate:
        jdbc:
          batch_size: 50
        format_sql: true # 로그 찍을 때 보기 편하게 포맷함
        order_updates: true # JPA_Batch 작업 활성화
        show_sql: true # JPA가 만든 쿼리문 로그에 출력

  #File 업로드 설정
  servlet:
    multipart:
      max-file-size: 15MB
  jackson:
    default-property-inclusion: non_null #응답 JSON을 만들 때 null인 속성은 제외한다.
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: 0
            client-secret: 0
            scope:
              - emial
              - profile

          kakao:
            client-name: Kakao
            client-id: 0
            client-secret: 0
            client-authentication-method: client_secret_post #client_id, client_secret 쿼리 스트링으로 날아가야 한다.
            authorization-grant-type: authorization_code # 권한부여 유형 (인가코드 -> access-token 받는 방식 선택)
            redirect-uri: "{baseUrl}/{action}/oauth2/code/{registrationId}"
                          # baseUrl: 서버가 돌아가고 있는 host
                          # action: login
                          # registrationId: kakao
                          # 결과: localhost:8080/login/oauth2/code/kakao
            scope:
              - profile_nickname
              - profile_image

          naver:
            client-name: Naver
            client-id: 0
            client-secret: 0
            client-authentication-method: client_secret_post #client_id, client_secret 쿼리 스트링으로 날아가야 한다.
            authorization-grant-type: authorization_code # 권한부여 유형 (인가코드 -> access-token 받는 방식 선택)
            redirect-uri: "{baseUrl}/{action}/oauth2/code/{registrationId}"
              # baseUrl: 서버가 돌아가고 있는 host
              # action: login
            # registrationId: kakao
            # 결과: localhost:8080/login/oauth2/code/kakao
            scope:
              - name
              - email
              - profile_image
        provider:
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize # kakao 인증처리 URL
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-info-authentication-method: header # default 값이 header AccessToken 어디에 담아서 보낼지 설정 (header, form, query)
            user-name-attribute: id # 유일값 속성명
          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize # 네이버 인증 처리 URL
            token-uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user-info-authentication-method: header # 기본 값: header, AccessToken을 어디에 담아서 보낼지 설정 (header, form, query)
            user-name-attribute: response.id # 네이버에서 반환되는 유저 정보에서 유일값 속성명


#Swagger 설정
springdoc:
  swagger-ui:
    default-model-expand-depth: 10
    display-request-duration: true
    groups-order: asc
    operations-sorter: method
    path: /swagger
    tags-sorter: alpha
  cache:
    disabled: true
